package br.com.auxilium;import android.content.Intent;import android.database.SQLException;import android.database.sqlite.SQLiteDatabase;import android.os.Bundle;import android.support.v7.app.AlertDialog;import android.support.v7.app.AppCompatActivity;import android.view.View;import android.widget.Button;import android.widget.EditText;import br.com.auxilium.Model.UsuarioModel;import br.com.auxilium.Repository.UsuarioRepository;import br.com.auxilium.Util.DAOUtil;import br.com.auxilium.Util.Utilidades;public class MainActivity extends AppCompatActivity {    private SQLiteDatabase conexao;    private DAOUtil Daoutil;    private UsuarioRepository usuarioRepository;    private EditText edtLogin;    private EditText edtSenha;    private Button btnCadastrar;    private Button btnLogin;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate (savedInstanceState);        setContentView (R.layout.activity_main);        this.criarConexao ();        this.criarComponentes ();        this.eventos ();    }    protected void criarComponentes() {        edtLogin = (EditText) super.findViewById (R.id.edtLogin);        edtSenha = (EditText) super.findViewById (R.id.edtSenha);        btnCadastrar = (Button) super.findViewById (R.id.btnCadastrar);        btnLogin = (Button) super.findViewById (R.id.btnLogin);    }    protected void login() {        UsuarioModel usuario = new UsuarioModel ();        usuario.setLogin (edtLogin.getText ().toString ().toUpperCase ().trim ());        usuario.setSenha (edtSenha.getText ().toString ().toUpperCase ().trim ());        Daoutil = new DAOUtil (this);        usuarioRepository = new UsuarioRepository (this);        if (this.usuarioRepository.getLogin (usuario)) {            UsuarioModel usuarioModel = usuarioRepository.getLogin2 (usuario);            Intent intent = new Intent (getApplicationContext (), MenuPrincipalActivity.class);            intent.putExtra ("idUsuario", usuarioModel.getCodigo ());            startActivity (intent);            finish ();        } else {            Utilidades.Alert (MainActivity.this,"Login ou Senha incorreto!!");            //            // Toast.makeText (MainActivity.this, "E-mail e/ou senha incorretos.", Toast.LENGTH_SHORT).show ();        }    }    protected void eventos() {        btnCadastrar.setOnClickListener (new View.OnClickListener () {            @Override            public void onClick(View v) {                startActivity (new Intent (getApplicationContext (), CadastrarActivity.class));                finish ();            }        });        btnLogin.setOnClickListener (new View.OnClickListener () {            @Override            public void onClick(View v) {                MainActivity.this.login ();            }        });    }    private void criarConexao() {        try {            Daoutil = new DAOUtil (this);            conexao = Daoutil.getWritableDatabase ();            // Snackbar.make (layout,"Conexão bem sucedida!",Snackbar.LENGTH_LONG).setAction ("OK",null).show ();            AlertDialog.Builder dlg2 = new AlertDialog.Builder (this);            dlg2.setTitle ("Conexão bem sucedida");            dlg2.setMessage ("Ok");            dlg2.show ();        } catch (SQLException ex) {            AlertDialog.Builder dlg = new AlertDialog.Builder (this);            dlg.setTitle (getString (R.string.action_erro_banco));            dlg.setMessage (ex.getMessage ());            dlg.setNeutralButton ("OK", null);            dlg.show ();        }    }    protected void Cadastrar() {        startActivity (new Intent (MainActivity.this, CadastrarActivity.class));        finish ();    }}